Basic CI/CD Integration using Git & GitHub
(It's configured inside Zorin OS 15.3)


>>> Objecttives
>>> Push a local Git repo to the "main" branch remote GitHub repo
>>> Create a new Git branch.
>>> The push another commit to the branch of the remote github repo, then pull that to the "main" branch of the remote GitHub repo


1. Install git into the machine
	sudo apt-get install git

2. Check the git version.
	git --version

3. Configure git with the GitHub credentials
   Register GitHub user name onto the Git
	git config --global user.name "Ashraf840"
   Register GitHub user email onto the Git
	git config --global user.email "shift2unleashed2011@gmail.com"

4. It's a git configuration which makes git to create the default branch name as specified (in my case, it's "main")
	git config --global init.defaultBranch main
   Even from now, git will create default branch named as "main" in any other project. 
   To check all the global configurations list,
   	git config --global --list
   
   To unset/ remove any git config. Look at the following examples.
   	git config --global --unset init.defaultBranch
   	git config --global --unset user.name
   	git config --global --unset user.email


5. Create a Github repository
	" Git-Github-Tutorials "

6. Open the terminal inside the directory, and initialize git
	git init

7. Check the status of the file using git
	git status

8. Add the files to track changes in git
	git add <filename>	# to add files separately to git
	git add .		# to add all the files (use ".gitignore" before using this cmd if there is any sensitive data)

9. Check the git status now. It will show some output like below
[output]
On branch main

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
	new file:   Configure Git with GitHub.txt

10. Make the commit of this changes inside git
	git commit -m "initial commit"

11. Add the name of remote as "origin" & add the URL of the remote repository, which will connect the local git repo with the remote GitHub repo ("Git-Github-Tutorials") using this url.
    Then check the available remotes for this local git repository.
	git remote add origin https://github.com/Ashraf840/Git-Github-Tutorials.git
	git remote -v

12. First push this initial commit to the "main" branch of the GitHub repository, (later, all the pushes will made to a GitHub branch directly)
	git push -u origin main
Username for 'https://github.com': Ashraf840
Password for 'https://Ashraf840@github.com': Chirochena1993

13. Check the push in GitHub. Make another add, commit & push to the GitHub branch repo
	git add .
	git commit -m "Second commit: To complete the procedure documentation"
	git push -u origin main

14. Create a new branch ("dev") in Git
	git branch dev		# create a new branch "dev"
	git checkout dev	# switch the branch from "main" to "dev"
	git add .		# add the files again to the new branch "dev" of git
	git commit -m "Second commit: to branch 'dev'"
	git push -u origin dev
Username for 'https://github.com': Ashraf840
Password for 'https://Ashraf840@github.com': **************

15. Check this commit-push in GitHub, merge this commit to the "main" branch of GitHub. Make a GitHub commit message




????????######	git reset --mixed origin/dev	# reset the remote branch from "main" to "dev"





